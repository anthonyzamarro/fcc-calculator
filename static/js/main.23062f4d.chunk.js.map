{"version":3,"sources":["components/numbers.js","components/operators.js","components/results.js","components/equals.js","components/clear.js","components/calculator.js","actions/numClicked.js","actions/opClicked.js","actions/eqClicked.js","actions/clrClicked.js","actions/dcmlClicked.js","App.js","serviceWorker.js","reducers/numbersReducer.js","reducers/rootReducer.js","reducers/eqDisplayReducer.js","reducers/dcmlDisplayReducer.js","reducers/clrDisplayReducer.js","reducers/numDisplayReducer.js","reducers/opDisplayReducer.js","index.js"],"names":["connect","data","props","numDisplayReducer","map","number","react_default","a","createElement","key","id","onClick","e","numberClick","value","opDisplayReducer","operator","operatorClicked","operation","Results","numResults","this","nums","displayNumResults","length","className","Component","numbersReducer","eqDisplayReducer","equals","equalsClicked","equal","clrDisplayReducer","clear","clearClicked","Calculator","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","input","_this2","document","addEventListener","i","keyCode","numberClicked","decimalClicked","results","components_clear","handleClear","bind","operators","handleOperation","components_equals","handleEquals","numbers","handleNumber","dispatch","type","payload","clr","console","log","App","calculator","Boolean","window","location","hostname","match","combineReducers","str","arguments","undefined","action","numberArray","slice","push","shift","join","replace","_","g1","g2","operatorArray","evaluateArray","array","groupVals","includes","product","prev","next","quotient","negativeFinal","pop","parseFloat","filter","v","arr","concat","toString","reduce","acc","curr","dcmlDisplayReducer","decimal","store","createStore","ReactDOM","render","es","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.23062f4d.chunk.js","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\n// import NumbersContainer from \"../containers/numbersContainer\";\n\nconst Numbers = props => {\n  return props.numDisplayReducer.map(number => (\n    <li\n      key={number.id}\n      id={number.id}\n      onClick={e => props.numberClick(number.number)}\n      value={number.number}\n    >\n      {number.number}\n    </li>\n  ));\n};\n\nfunction mapStateToProps(data) {\n  return data;\n}\nexport default connect(\n  mapStateToProps,\n  null\n)(Numbers);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n// import NumbersContainer from \"../containers/numbersContainer\";\n\nconst Operators = props => {\n  return props.opDisplayReducer.map(operator => (\n    <li \n    \tkey={operator.id}\n      id={operator.id}\n    \tonClick={e => props.operatorClicked(operator.operation)}\n    >\n    \t{operator.operation}\n    </li>\n  ));\n};\n\nfunction mapStateToProps(data) {\n  return data;\n}\nexport default connect(\n  mapStateToProps,\n  null\n)(Operators);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nclass Results extends Component {\n  render() {\n    let numResults = this.props.nums.map(number => {\n      return number;\n    });\n    let displayNumResults = numResults.length < 1 ? '0' : numResults;\n    return (\n      <div className=\"results\" id=\"display\">\n        {displayNumResults}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(data) {\n  return {\n    nums: data.numbersReducer,\n  };\n}\nexport default connect(\n  mapStateToProps,\n  null\n)(Results);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nconst Equals = props => {\n  return props.eqDisplayReducer.map(equals => (\n    <li \n      key={equals.id}\n      id={equals.id}\n      onClick={e => props.equalsClicked(equals.equal)}\n    >\n      {equals.equal}\n    </li>\n  ));\n};\n\nfunction mapStateToProps(data) {\n  return data;\n}\nexport default connect(\n  mapStateToProps,\n  null\n)(Equals);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nconst Clear = props => {\n  return props.clrDisplayReducer.map(clear => (\n    <div \n      key={clear.id}\n      id={clear.id}\n      className=\"clear\"\n      onClick={e => props.clearClicked(clear.clear)}\n    >\n      {clear.clear}\n    </div>\n  ));\n};\n\nfunction mapStateToProps(data) {\n  return data;\n}\nexport default connect(\n  mapStateToProps,\n  null\n)(Clear);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Numbers from \"./numbers\";\nimport Operators from \"./operators\";\nimport Results from \"./results\";\nimport Equals from \"./equals\";\nimport Clear from \"./clear\";\n// import Decimal from \"./decimal\";\nimport { nClicked } from \"../actions/numClicked\";\nimport { oClicked } from \"../actions/opClicked\";\nimport { eqClicked } from \"../actions/eqClicked\";\nimport { clrClicked } from \"../actions/clrClicked\";\nimport { dcmlClicked } from \"../actions/dcmlClicked\";\n\nclass Calculator extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      input: this.props\n    }\n  }\n  componentDidMount() {\n    document.addEventListener('keyup', (e) => {\n          // console.log(e);\n      for(let i = 48; i <= 58; i++) {\n        if (e.keyCode === i) {\n          this.props.numberClicked(e.key);\n        }\n      }\n      switch(e.keyCode) {\n        case 187:\n          this.props.operatorClicked(e.key);\n          break;\n        case 189:\n          this.props.operatorClicked(e.key);\n          break;\n        case 56:\n        // console.log(e)\n          this.props.operatorClicked(e.key);\n        break;\n        case 191:\n          this.props.operatorClicked(e.key);\n          break;\n        case 13:\n          this.props.equalsClicked(e.key);\n          break;\n        case 27:\n          this.props.clearClicked(e.key);\n          break;\n        default:\n          // console.log(e);\n      }\n    });\n  }  \n  handleNumber(e) {\n    this.props.numberClicked(e);\n  }\n  handleOperation(e) {\n    this.props.operatorClicked(e);\n  }\n  handleEquals(e) {\n    this.props.equalsClicked(e);\n  }  \n  handleClear(e) {\n    this.props.clearClicked(e);\n  }\n  handleDecimal(e) {\n    this.props.decimalClicked(e);\n  }\n  render() {\n    return (\n      <div className=\"calculator\">\n        <div className=\"results-container\"><Results /></div>\n        <div className=\"clear-container\"><Clear clearClicked={(this.handleClear = this.handleClear.bind(this))}/></div>\n        <ul className=\"operations\">\n          <Operators operatorClicked={(this.handleOperation = this.handleOperation.bind(this))}/>\n          <Equals equalsClicked={(this.handleEquals = this.handleEquals.bind(this))}/>\n        </ul>\n        <ul className=\"numbers\">\n          <Numbers\n            numberClick={(this.handleNumber = this.handleNumber.bind(this))}\n          />\n        </ul>\n      </div>\n    );\n  }\n}\n\nfunction maptDispatchToProps(dispatch) {\n  return {\n    numberClicked: data => {\n      dispatch(nClicked(data));\n    },\n    operatorClicked: data => {\n      dispatch(oClicked(data));\n    },\n    equalsClicked: data => {\n      dispatch(eqClicked(data));\n    },\n    clearClicked: data => {\n      dispatch(clrClicked(data));\n    },\n    decimalClicked: data => {\n      dispatch(dcmlClicked(data));\n    }\n  };\n}\n\nexport default connect(\n  null,\n  maptDispatchToProps\n)(Calculator);\n","export function nClicked(num) {\n  // console.log(\"nClicked Action:\", num);\n  return {\n    type: \"NUMBER_CLICKED\",\n    payload: num\n  }\n}","export function oClicked(op) {\n\t// console.log(\"opClicked Action:\", op);\t\n\treturn {\n\t\ttype: \"OPERATOR_CLICKED\",\n\t\tpayload: op\n\t}\t\n}","export function eqClicked(eq) {\n\t// console.log(\"eqClicked Action:\", eq);\n\treturn {\n\t\ttype: \"EQUALS_CLICKED\",\n\t\tpayload: eq\n\t}\t\n}","export function clrClicked(clr) {\n\tconsole.log(\"clrClicked Action:\", clr);\n\treturn {\n\t\ttype: \"CLEAR_CLICKED\",\n\t\tpayload: clr\n\t}\t\n}","export function dcmlClicked(dcml) {\n\t// console.log(\"dcmlClicked Action:\", dcml);\n\treturn {\n\t\ttype: \"DECIMAL_CLICKED\",\n\t\tpayload: dcml\n\t}\t\n}","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Calculator from \"./components/calculator\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Calculator />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","function evaluateArray(array) {\n  console.log(\"array before\", array);\n  let a = array.join(\"\");\n  let groupVals = a.match(/[\\d]+|[\\D]+/g);\n  if (groupVals.includes(\".\")) {\n    groupVals = groupVals\n      .join(\"\")\n      .match(/\\.[\\d]|[\\d]+\\.[\\d]+|\\.[\\d]|[\\d]+|[\\D]|\\.[\\D]+/g);\n  }\n  let negativeFinal = array.slice(0, 1).pop();\n  if (parseFloat(negativeFinal) < 0) return negativeFinal;\n  if (groupVals.includes(\"*\")) {\n    let product, prev, next;\n    groupVals.filter((v, i, arr) => {\n      if (v === \"*\") {\n        prev = arr[i - 1];\n        next = arr[i + 1];\n        product = parseFloat(prev) * parseFloat(next);\n      }\n      return product;\n    });\n    let rep = a.replace(`${prev}*${next}`, product.toString());\n    return evaluateArray([rep]);\n  } else if (groupVals.includes(\"/\")) {\n    let quotient, prev, next;\n    groupVals.filter((v, i, arr) => {\n      if (v === \"/\") {\n        prev = arr[i - 1];\n        next = arr[i + 1];\n        quotient = parseFloat(prev) / parseFloat(next);\n      }\n      return quotient;\n    });\n    let rep = a.replace(`${prev}/${next}`, quotient.toString());\n    return evaluateArray([rep]);\n  } else if (groupVals.includes(\"+\") || groupVals.includes(\"-\")) {\n    groupVals.filter((a,i,arr) => {\n      if (a === '-') {\n        arr[i + 1] = `-${arr[i + 1]}`;\n        return arr;\n      }\n    });\n    let t = groupVals.filter((a,i,v) => {if (parseFloat(a)) return a})\n    let g = t.reduce((acc, curr) => parseFloat(acc) + parseFloat(curr));\n    return [g];\n    // return evaluateArray([eval(groupVals.join(''))]);\n  }\n  // else if (groupVals.includes(\"+\")) {\n  //   let sum, prev, next;\n  //   groupVals.filter((v, i, arr) => {\n  //     if (v === \"+\") {\n  //       prev = arr[i - 1];\n  //       next = arr[i + 1];\n  //       sum = parseFloat(prev) + parseFloat(next);\n  //     }\n  //     return sum;\n  //   });\n  //   let rep = a.replace(`${prev}+${next}`, sum.toString());\n  //   return evaluateArray([rep]);\n  // } \n  // else if (groupVals.includes(\"-\")) {\n  //   let diff, prev, next;\n  //   groupVals.filter((v, i, arr) => {\n  //     if (v === \"-\") {\n  //       prev = arr[i - 1];\n  //       next = arr[i + 1];\n  //       diff = parseFloat(prev) - parseFloat(next);\n  //     }\n  //     return diff;\n  //   });\n  //   let rep = a.replace(`${prev}-${next}`, diff.toString());\n  //   return evaluateArray([rep]);\n  // }\n  return a;\n}\n\nexport default function(state = [], action) {\n  switch (action.type) {\n    case \"NUMBER_CLICKED\":\n      let numberArray = state.slice();\n      numberArray.push(action.payload);\n      let zeroFirst = numberArray[0];\n      if (zeroFirst === \"0\") {\n        numberArray.shift();\n      }\n      // ([-+*/](?=\\.|[\\d]+) ---> matches operators\n      // let j = numberArray.join(\"\").match(/^([\\d]*\\.{1,}[\\d]+|[\\d]+)|([-+*/](?=\\.|[\\d]))|\\.[\\d]+|[\\d]+/g);\n      // console.log(j);\n\n      // credit for this awesome code goes to this person:\n      // https://stackoverflow.com/questions/53697325/javascript-regex-to-match-math-expression/53697367#53697367\n      const clean = str => str\n      // Match zero or more digits, followed by a decimal,\n      // followed by more decimal and period characters\n      // For everything past the first decimal, replace decimals with the empty string\n      .replace(\n        /(\\d*\\.)([\\d.]+)/g,\n        (_, g1, g2) => {\n          // console.log('_',_,'g1',g1,'g2',g2)\n          return g1 + g2.replace(/\\./g, '')\n        }\n      )\n      // Match 2 or more operators, capture the last operator in a group\n      // Replace with the last operator captured\n      .replace(\n        /([-+/*]){2,}/g,\n        '$1'\n      );\n      return [clean(numberArray.join(''))];\n    case \"OPERATOR_CLICKED\":\n      let operatorArray = state.slice();\n      operatorArray.push(action.payload);\n      let opFirst = operatorArray[0];\n      switch (opFirst) {\n        case \"+\":\n          operatorArray.shift();\n          break;\n        case \"-\":\n          operatorArray.shift();\n          break;\n        case \"/\":\n          operatorArray.shift();\n          break;\n        case \"*\":\n          operatorArray.shift();\n          break;\n        default:\n      }\n      return operatorArray;\n    // case \"DECIMAL_CLICKED\":\n    //   let decState = state.slice();\n    //   let dec = [action.payload];\n    //   let addDec = decState.concat(dec);\n    //   return addDec;\n    case \"EQUALS_CLICKED\":\n      let equalsArray = state.slice();\n      return [evaluateArray(equalsArray)];\n    case \"CLEAR_CLICKED\":\n      let clearArray = state.slice();\n      clearArray = [];\n      return clearArray;\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport numDisplayReducer from \"./numDisplayReducer.js\";\nimport opDisplayReducer from \"./opDisplayReducer.js\";\nimport eqDisplayReducer from \"./eqDisplayReducer.js\";\nimport clrDisplayReducer from \"./clrDisplayReducer.js\";\nimport dcmlDisplayReducer from \"./dcmlDisplayReducer.js\";\nimport numbersReducer from \"./numbersReducer.js\";\n// import operatorsReducer from \"./operatorsReducer.js\";\n\nexport default combineReducers({\n  numbersReducer,\n  eqDisplayReducer,\n  dcmlDisplayReducer,\n  clrDisplayReducer,\n  numDisplayReducer,\n  opDisplayReducer\n});\n","export default function eqDisplayReducer() {\n  return [\n    {\n      id: \"equals\",\n      equal: \"=\"\n    }\n  ]\n}\n","export default function dcmlDisplayReducer() {\n  return [\n    {\n      id: \"decimal\",\n      decimal: \".\"\n    }\n  ]\n}\n","export default function clrDisplayReducer() {\n  return [\n    {\n      id: \"clear\",\n      clear: \"AC\"\n    }\n  ]\n}\n","export default function numDisplayReducer() {\n  return [\n    {\n      id: \"zero\",\n      number: \"0\"\n    },\n\n    {\n      id: \"one\",\n      number: \"1\"\n    },\n    {\n      id: \"two\",\n      number: \"2\"\n    },\n    {\n      id: \"three\",\n      number: \"3\"\n    },\n    {\n      id: \"four\",\n      number: \"4\"\n    },\n    {\n      id: \"five\",\n      number: \"5\"\n    },\n    {\n      id: \"six\",\n      number: \"6\"\n    },\n    {\n      id: \"seven\",\n      number: \"7\"\n    },\n    {\n      id: \"eight\",\n      number: \"8\"\n    },\n    {\n      id: \"nine\",\n      number: \"9\"\n    },\n    {\n      id: \"decimal\",\n      number: \".\"\n    }\n  ];\n}\n","export default function opDisplayReducer() {\n  return [\n    {\n      id: \"add\",\n      operation: \"+\"\n    },\n    {\n      id: \"subtract\",\n      operation: \"-\"\n    },\n    {\n      id: \"multiply\",\n      operation: \"*\"\n    },\n    {\n      id: \"divide\",\n      operation: \"/\"\n    }\n  ];\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport combineReducers from \"./reducers/rootReducer.js\";\n\nconst store = createStore(combineReducers);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}